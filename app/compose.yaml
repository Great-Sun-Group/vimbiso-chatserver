version: '3.8'

services:
  web:
    build:
      context: ..
      dockerfile: Dockerfile
      target: ${DJANGO_ENV:-development}
    environment:
      # Django Configuration
      - DJANGO_SECRET=${DJANGO_SECRET}
      - DEBUG=${DEBUG:-False}  # Default to False for security
      - DJANGO_ENV=${DJANGO_ENV:-development}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-config.settings}
      - DJANGO_DEBUG_TOOLBAR=${DJANGO_DEBUG_TOOLBAR:-1}
      - PYTHONPATH=${PYTHONPATH:-/app}

      # Redis Configuration
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}

      # Credex Core API Configuration
      - MYCREDEX_APP_URL=${MYCREDEX_APP_URL:-https://dev.mycredex.dev/}
      - CLIENT_API_KEY=${CLIENT_API_KEY}

      # WhatsApp Integration
      - WHATSAPP_API_URL=${WHATSAPP_API_URL:-https://graph.facebook.com/v17.0/}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID}
      - WHATSAPP_BUSINESS_ID=${WHATSAPP_BUSINESS_ID}
      - WHATSAPP_REGISTRATION_FLOW_ID=${WHATSAPP_REGISTRATION_FLOW_ID}
      - WHATSAPP_COMPANY_REGISTRATION_FLOW_ID=${WHATSAPP_COMPANY_REGISTRATION_FLOW_ID}

      # Development Settings
      - X_GITHUB_TOKEN=${X_GITHUB_TOKEN:-}
    volumes:
      - .:/app:cached
      - python-packages:/usr/local/lib/python3.10/site-packages/
      - app_data:/efs-vols/app-data
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: >
      bash -c "mkdir -p /efs-vols/app-data/data/db &&
              chmod -R 777 /efs-vols/app-data &&
              ./start_app.sh"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .venv/
            - __pycache__/
            - "*.pyc"
        - action: rebuild
          path: requirements/dev.txt

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  python-packages:
  app_data:
