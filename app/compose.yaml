version: '3.8'

services:
  web:
    build:
      context: ..
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET=${DJANGO_SECRET}
      - DEBUG=1
      - REDIS_URL=redis://redis:6379/
      # WhatsApp Integration
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID}
      - WHATSAPP_BOT_API_KEY=${WHATSAPP_BOT_API_KEY}
      # Credex Core API
      - MYCREDEX_APP_URL=${MYCREDEX_APP_URL}
      # Development Settings
      - DJANGO_ENV=development
      - DJANGO_SETTINGS_MODULE=config.settings
      - DJANGO_DEBUG_TOOLBAR=1
      - PYTHONPATH=/app
      - X_GITHUB_TOKEN=${X_GITHUB_TOKEN:-}
    volumes:
      - .:/app:cached
      - python-packages:/usr/local/lib/python3.10/site-packages/
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .venv/
            - __pycache__/
            - "*.pyc"
        - action: rebuild
          path: requirements/dev.txt

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: redis-server --appendonly yes

volumes:
  redis_data:
  python-packages:
