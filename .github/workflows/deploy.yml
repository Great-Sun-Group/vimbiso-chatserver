name: Deploy Credex-Bot to EC2
run-name: ${{ github.actor }} pushed to auto-deploy-setup with commit message '${{ github.event.head_commit.message }}'

on:
  push:
    branches:
      - auto-deployed
  pull_request:
    branches:
      - auto-deployed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Set up SSH deploy keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add EC2 Host to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      # - name: Create backup of current deployment
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} "
      #       sudo cp -r /var/www/html/CredexBot-ec2 /var/www/html/CredexBot-ec2-backup
      #     "

      # - name: Create .env file
      #   run: |
      #     echo "SECRET_KEY"=${{ secrets.SECRET_KEY }} >> .env
      #     echo "CREDEX"=${{ secrets.CREDEX }} >> .env
      #     echo "DEBUG"=${{ secrets.DEBUG }} >> .env
      #     echo "EC2_IP"=${{ secrets.EC2_IP }} >> .env
      #     echo "KNOWN_HOSTS"=${{ secrets.KNOWN_HOSTS }} >> .env
      #     echo "PLATFORM_NAME"=${{ secrets.PLATFORM_NAME }} >> .env
      #     echo "PROJECT_DIRECTORY"=${{ secrets.PROJECT_DIRECTORY }} >> .env
      #     echo "REDIS_URL"=${{ secrets.REDIS_URL }} >> .env
      #     echo "WHATSAPP_ACCESS_TOKEN"=${{ secrets.WHATSAPP_ACCESS_TOKEN }} >> .env
      #     echo "WHATSAPP_BUSINESS_ID"=${{ secrets.WHATSAPP_BUSINESS_ID }} >> .env
      #     echo "Whatsapp_phone"=${{ secrets.WHATSAPP_PHONE_NUMBER_ID }} >> .env
      #     echo "Whatsapp_region"=${{ secrets.WHATSAPP_REGISTRATION_FLOW_ID }} >> .env

      - name: Copy Project to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} "sudo mkdir -p /var/www/html/CredexBot-ec2 && sudo chown -R ec2-user:ec2-user /var/www/html/CredexBot-ec2"
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./* ec2-user@${{ secrets.EC2_IP }}:/var/www/html/CredexBot-ec2


      - name: Install dependencies and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} "
            cd /var/www/html/CredexBot-ec2 &&
            source venv/bin/activate &&
            pip install -r requirements.txt &&
            python app/manage.py migrate &&
            sudo systemctl restart gunicorn
          " || ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} "
            echo 'Deployment failed, reverting to last working version' &&
            sudo rm -rf /var/www/html/CredexBot-ec2 &&
            sudo mv /var/www/html/CredexBot-ec2-backup /var/www/html/CredexBot-ec2 &&
            sudo systemctl restart gunicorn
          "
